/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Campaign, CampaignInterface } from "../Campaign";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "approveRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approversCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
    ],
    name: "createRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "finalizeRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "complete",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "approvalCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516117ed3803806117ed83398181016040528101906100329190610119565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816001819055505050610159565b600080fd5b6000819050919050565b61009881610085565b81146100a357600080fd5b50565b6000815190506100b58161008f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e6826100bb565b9050919050565b6100f6816100db565b811461010157600080fd5b50565b600081519050610113816100ed565b92915050565b600080604083850312156101305761012f610080565b5b600061013e858286016100a6565b925050602061014f85828601610104565b9150509250929050565b611685806101686000396000f3fe6080604052600436106100865760003560e01c806382fde0931161005957806382fde0931461015d5780638a9cfd5514610188578063937e09b1146101b1578063d7bb99ba146101dc578063d7d1bbdb146101e657610086565b8063034410061461008b5780630a144391146100b4578063481c6a75146100f157806381d12c581461011c575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610a66565b61020f565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610af1565b61044d565b6040516100e89190610b39565b60405180910390f35b3480156100fd57600080fd5b5061010661046d565b6040516101139190610b63565b60405180910390f35b34801561012857600080fd5b50610143600480360381019061013e9190610a66565b610491565b604051610154959493929190610c3e565b60405180910390f35b34801561016957600080fd5b5061017261058c565b60405161017f9190610c98565b60405180910390f35b34801561019457600080fd5b506101af60048036038101906101aa9190610e14565b610592565b005b3480156101bd57600080fd5b506101c6610754565b6040516101d39190610c98565b60405180910390f35b6101e461075a565b005b3480156101f257600080fd5b5061020d60048036038101906102089190610a66565b610863565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029490610ef5565b60405180910390fd5b6000600482815481106102b3576102b2610f15565b5b9060005260206000209060050201905060026003546102d29190610f73565b600382600301546102e39190610f73565b1015610324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031b90611001565b60405180910390fd5b8060020160149054906101000a900460ff1615610376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036d9061106d565b60405180910390fd5b80600101544710156103bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b4906110d9565b60405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600101549081150290604051600060405180830381858888f1935050505015801561042b573d6000803e3d6000fd5b5060018160020160146101000a81548160ff0219169083151502179055505050565b60026020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481815481106104a157600080fd5b90600052602060002090600502016000915090508060000180546104c490611128565b80601f01602080910402602001604051908101604052809291908181526020018280546104f090611128565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060030154905085565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106355750600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b906111cb565b60405180910390fd5b6004600181600181540180825580915050039060005260206000209050506000600460016004805490506106a891906111eb565b815481106106b9576106b8610f15565b5b90600052602060002090600502019050838160000190816106da91906113cb565b50828160010181905550818160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160020160146101000a81548160ff0219169083151502179055506000816003018190555050505050565b60015481565b60015434101561079f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610796906114e9565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610861576001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003600081548092919061085b90611509565b91905055505b565b60006004828154811061087957610878610f15565b5b90600052602060002090600502019050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090c906115c3565b60405180910390fd5b8060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156109a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099b9061162f565b60405180910390fd5b60018160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550806003016000815480929190610a1390611509565b91905055505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610a4381610a30565b8114610a4e57600080fd5b50565b600081359050610a6081610a3a565b92915050565b600060208284031215610a7c57610a7b610a26565b5b6000610a8a84828501610a51565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610abe82610a93565b9050919050565b610ace81610ab3565b8114610ad957600080fd5b50565b600081359050610aeb81610ac5565b92915050565b600060208284031215610b0757610b06610a26565b5b6000610b1584828501610adc565b91505092915050565b60008115159050919050565b610b3381610b1e565b82525050565b6000602082019050610b4e6000830184610b2a565b92915050565b610b5d81610ab3565b82525050565b6000602082019050610b786000830184610b54565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bb8578082015181840152602081019050610b9d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610be082610b7e565b610bea8185610b89565b9350610bfa818560208601610b9a565b610c0381610bc4565b840191505092915050565b610c1781610a30565b82525050565b6000610c2882610a93565b9050919050565b610c3881610c1d565b82525050565b600060a0820190508181036000830152610c588188610bd5565b9050610c676020830187610c0e565b610c746040830186610c2f565b610c816060830185610b2a565b610c8e6080830184610c0e565b9695505050505050565b6000602082019050610cad6000830184610c0e565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cf582610bc4565b810181811067ffffffffffffffff82111715610d1457610d13610cbd565b5b80604052505050565b6000610d27610a1c565b9050610d338282610cec565b919050565b600067ffffffffffffffff821115610d5357610d52610cbd565b5b610d5c82610bc4565b9050602081019050919050565b82818337600083830152505050565b6000610d8b610d8684610d38565b610d1d565b905082815260208101848484011115610da757610da6610cb8565b5b610db2848285610d69565b509392505050565b600082601f830112610dcf57610dce610cb3565b5b8135610ddf848260208601610d78565b91505092915050565b610df181610c1d565b8114610dfc57600080fd5b50565b600081359050610e0e81610de8565b92915050565b600080600060608486031215610e2d57610e2c610a26565b5b600084013567ffffffffffffffff811115610e4b57610e4a610a2b565b5b610e5786828701610dba565b9350506020610e6886828701610a51565b9250506040610e7986828701610dff565b9150509250925092565b7f4f6e6c79206d616e616765722063616e2063616c6c20746869732066756e637460008201527f696f6e0000000000000000000000000000000000000000000000000000000000602082015250565b6000610edf602383610b89565b9150610eea82610e83565b604082019050919050565b60006020820190508181036000830152610f0e81610ed2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f7e82610a30565b9150610f8983610a30565b9250828202610f9781610a30565b91508282048414831517610fae57610fad610f44565b5b5092915050565b7f4e6f7420656e6f75676820617070726f76616c73000000000000000000000000600082015250565b6000610feb601483610b89565b9150610ff682610fb5565b602082019050919050565b6000602082019050818103600083015261101a81610fde565b9050919050565b7f5265717565737420616c72656164792066696e616c697a656400000000000000600082015250565b6000611057601983610b89565b915061106282611021565b602082019050919050565b600060208201905081810360008301526110868161104a565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006110c3601283610b89565b91506110ce8261108d565b602082019050919050565b600060208201905081810360008301526110f2816110b6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061114057607f821691505b602082108103611153576111526110f9565b5b50919050565b7f4f6e6c79206d616e61676572206f7220617070726f766572732063616e20637260008201527f6561746520726571756573747300000000000000000000000000000000000000602082015250565b60006111b5602d83610b89565b91506111c082611159565b604082019050919050565b600060208201905081810360008301526111e4816111a8565b9050919050565b60006111f682610a30565b915061120183610a30565b925082820390508181111561121957611218610f44565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611244565b61128b8683611244565b95508019841693508086168417925050509392505050565b6000819050919050565b60006112c86112c36112be84610a30565b6112a3565b610a30565b9050919050565b6000819050919050565b6112e2836112ad565b6112f66112ee826112cf565b848454611251565b825550505050565b600090565b61130b6112fe565b6113168184846112d9565b505050565b5b8181101561133a5761132f600082611303565b60018101905061131c565b5050565b601f82111561137f576113508161121f565b61135984611234565b81016020851015611368578190505b61137c61137485611234565b83018261131b565b50505b505050565b600082821c905092915050565b60006113a260001984600802611384565b1980831691505092915050565b60006113bb8383611391565b9150826002028217905092915050565b6113d482610b7e565b67ffffffffffffffff8111156113ed576113ec610cbd565b5b6113f78254611128565b61140282828561133e565b600060209050601f8311600181146114355760008415611423578287015190505b61142d85826113af565b865550611495565b601f1984166114438661121f565b60005b8281101561146b57848901518255600182019150602085019450602081019050611446565b868310156114885784890151611484601f891682611391565b8355505b6001600288020188555050505b505050505050565b7f436f6e747269627574696f6e20746f6f20736d616c6c00000000000000000000600082015250565b60006114d3601683610b89565b91506114de8261149d565b602082019050919050565b60006020820190508181036000830152611502816114c6565b9050919050565b600061151482610a30565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361154657611545610f44565b5b600182019050919050565b7f4f6e6c7920617070726f766572732063616e20617070726f766520726571756560008201527f7374730000000000000000000000000000000000000000000000000000000000602082015250565b60006115ad602383610b89565b91506115b882611551565b604082019050919050565b600060208201905081810360008301526115dc816115a0565b9050919050565b7f416c726561647920617070726f76656400000000000000000000000000000000600082015250565b6000611619601083610b89565b9150611624826115e3565b602082019050919050565b600060208201905081810360008301526116488161160c565b905091905056fea2646970667358221220a03922d05b2c909e573b29186a0c29e91481d12199d6e2983aebdabb8bf3657264736f6c634300081c0033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    minimum: BigNumberish,
    creator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(minimum, creator, overrides || {});
  }
  override deploy(
    minimum: BigNumberish,
    creator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(minimum, creator, overrides || {}) as Promise<
      Campaign & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Campaign__factory {
    return super.connect(runner) as Campaign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new Interface(_abi) as CampaignInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Campaign {
    return new Contract(address, _abi, runner) as unknown as Campaign;
  }
}
